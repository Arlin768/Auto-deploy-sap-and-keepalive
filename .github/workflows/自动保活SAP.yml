name: 自动保活 SAP

on:
  schedule:
    - cron: '55 23 * * *'      # UTC时间 23:55 启动，以确保在 00:00 前 runner 就绪
  workflow_dispatch:          # 允许手动触发

jobs:
  restart-sg-apps:
    runs-on: ubuntu-latest
    name: 重启新加坡(SG)区域应用
    if: always()
    continue-on-error: true

    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 安装 CF CLI
      run: |
        wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
        echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
        sudo apt-get update
        sudo apt-get install -y cf8-cli

    - name: 设置 SG 区域 API 端点
      run: |
        echo "CF_API=https://api.cf.ap21.hana.ondemand.com" >> $GITHUB_ENV
        echo "使用API端点: $CF_API (区域: SG)"

    - name: 登录并自动检测组织和空间
      run: |
        cf login -a ${{ env.CF_API }} -u "${{ secrets.EMAIL }}" -p "${{ secrets.PASSWORD }}"
        echo "自动检测SG区域可用的组织和空间..."
        SELECTED_ORG=$(cf orgs | grep -v "^name$" | grep -v "^Getting orgs" | grep -v "^$" | head -n 1 | awk '{print $1}')
        if [ -z "$SELECTED_ORG" ]; then echo "错误: 未找到可用的组织"; exit 1; fi
        cf target -o "$SELECTED_ORG"
        SELECTED_SPACE=$(cf spaces | grep -v "^name$" | grep -v "^Getting spaces" | grep -v "^$" | head -n 1 | awk '{print $1}')
        if [ -z "$SELECTED_SPACE" ]; then echo "错误: 未找到可用的空间"; exit 1; fi
        cf target -s "$SELECTED_SPACE"
        echo "当前SG区域目标:"
        cf target

    - name: '[仅定时任务] 等待 UTC 00:00 开始任务'
      if: github.event_name == 'schedule'
      run: |
        echo "等待 UTC 时间到达 00:00 以开始重启流程..."
        target_time="00:00"
        while true; do
          current_time=$(curl -sI https://www.ntp.org/ | grep -i '^date:' | awk '{print $6}' | cut -c 1-5)
          if [ -z "$current_time" ]; then sleep 15; continue; fi
          if [[ "$current_time" > "01:00" ]]; then echo "错误：已超过安全时间窗口。"; exit 1; fi
          if [[ "$current_time" > "$target_time" || "$current_time" == "$target_time" ]]; then
            echo "时间到达或超过 00:00 UTC (北京时间 08:00)，开始执行重启任务。"
            break
          fi
          echo "时间未到，将在 1 分钟后再次检查..."
          sleep 60
        done

    - name: 尝试重启所有应用(直至成功)
      run: |
        apps=$(cf apps | awk 'NR>3 {print $1}' | grep -v '^$')
        if [ -z "$apps" ]; then
          echo "在SG区域中未发现任何应用，无需操作。"
          exit 0
        fi
        
        echo "发现应用列表:"
        echo "$apps"
        
        overall_success=true
        for app in $apps; do
          max_attempts=3
          attempt=1
          success=false
          while [[ $attempt -le $max_attempts ]]; do
            echo "----------------------------------------"
            echo "正在尝试重启应用: $app (第 $attempt / $max_attempts 次)"
            if cf restart "$app"; then
              echo "应用 $app 重启成功。"
              success=true
              break
            else
              echo "应用 $app 重启失败。将在 1 分钟后重试..."
              sleep 60
            fi
            ((attempt++))
          done
          
          if [[ "$success" == "false" ]]; then
            echo "应用 $app 在 $max_attempts 次尝试后仍重启失败。"
            overall_success=false
          fi
        done

        if [[ "$overall_success" == "false" ]]; then
          echo "----------------------------------------"
          echo "警告: SG区域部分应用重启失败。"
          exit 1
        else
          echo "----------------------------------------"
          echo "成功: SG区域所有应用均已成功触发重启。"
        fi

    - name: 验证最终应用状态
      run: |
        echo "验证SG区域最终应用状态..."
        cf apps

  restart-us-apps:
    runs-on: ubuntu-latest
    name: 重启美国(US)区域应用
    if: always()
    continue-on-error: true

    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 安装 CF CLI
      run: |
        wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
        echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
        sudo apt-get update
        sudo apt-get install -y cf8-cli

    - name: 设置 US 区域 API 端点
      run: |
        echo "CF_API=https://api.cf.us10-001.hana.ondemand.com" >> $GITHUB_ENV
        echo "使用API端点: $CF_API (区域: US)"

    - name: 登录并自动检测组织和空间
      run: |
        cf login -a ${{ env.CF_API }} -u "${{ secrets.EMAIL }}" -p "${{ secrets.PASSWORD }}"
        echo "自动检测US区域可用的组织和空间..."
        SELECTED_ORG=$(cf orgs | grep -v "^name$" | grep -v "^Getting orgs" | grep -v "^$" | head -n 1 | awk '{print $1}')
        if [ -z "$SELECTED_ORG" ]; then echo "错误: 未找到可用的组织"; exit 1; fi
        cf target -o "$SELECTED_ORG"
        SELECTED_SPACE=$(cf spaces | grep -v "^name$" | grep -v "^Getting spaces" | grep -v "^$" | head -n 1 | awk '{print $1}')
        if [ -z "$SELECTED_SPACE" ]; then echo "错误: 未找到可用的空间"; exit 1; fi
        cf target -s "$SELECTED_SPACE"
        echo "当前US区域目标:"
        cf target

    - name: '[仅定时任务] 等待 UTC 00:00 开始任务'
      if: github.event_name == 'schedule'
      run: |
        echo "等待 UTC 时间到达 00:00 以开始重启流程..."
        target_time="00:00"
        while true; do
          current_time=$(curl -sI https://www.ntp.org/ | grep -i '^date:' | awk '{print $6}' | cut -c 1-5)
          if [ -z "$current_time" ]; then sleep 15; continue; fi
          if [[ "$current_time" > "01:00" ]]; then echo "错误：已超过安全时间窗口。"; exit 1; fi
          if [[ "$current_time" > "$target_time" || "$current_time" == "$target_time" ]]; then
            echo "时间到达或超过 00:00 UTC (北京时间 08:00)，开始执行重启任务。"
            break
          fi
          echo "时间未到，将在 1 分钟后再次检查..."
          sleep 60
        done

    - name: 尝试重启所有应用(直至成功)
      run: |
        apps=$(cf apps | awk 'NR>3 {print $1}' | grep -v '^$')
        if [ -z "$apps" ]; then
          echo "在US区域中未发现任何应用，无需操作。"
          exit 0
        fi

        echo "发现应用列表:"
        echo "$apps"

        overall_success=true
        for app in $apps; do
          max_attempts=3
          attempt=1
          success=false
          while [[ $attempt -le $max_attempts ]]; do
            echo "----------------------------------------"
            echo "正在尝试重启应用: $app (第 $attempt / $max_attempts 次)"
            if cf restart "$app"; then
              echo "应用 $app 重启成功。"
              success=true
              break
            else
              echo "应用 $app 重启失败。将在 1 分钟后重试..."
              sleep 60
            fi
            ((attempt++))
          done
          
          if [[ "$success" == "false" ]]; then
            echo "应用 $app 在 $max_attempts 次尝试后仍重启失败。"
            overall_success=false
          fi
        done

        if [[ "$overall_success" == "false" ]]; then
          echo "----------------------------------------"
          echo "警告: US区域部分应用重启失败。"
          exit 1
        else
          echo "----------------------------------------"
          echo "成功: US区域所有应用均已成功触发重启。"
        fi

    - name: 验证最终应用状态
      run: |
        echo "验证US区域最终应用状态..."
        cf apps
